/* styles/globals.css */
@tailwind base;
@tailwind components;
@tailwind utilities;

/* Import theme variables */
@import './theme.css';

/* Viewport handling for mobile devices */
@layer base {
  html {
    /* Base font size - mobile first */
    font-size: 16px;

    /* Prevent zoom on double tap */
    touch-action: manipulation;
    -webkit-touch-callout: none;
    -webkit-user-select: none;
    -khtml-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;

    /* Smooth scrolling */
    scroll-behavior: smooth;

    /* Hide scrollbars but allow scrolling - but override for custom scrollbar below */
    scrollbar-width: thin;
    -ms-overflow-style: auto;
  }

  /* Touch devices (mobile/tablet) - keep base font size */
  @media (any-pointer: coarse) {
    html {
      font-size: 16px;
    }
  }

  /* Desktop devices with fine pointer (mouse) */
  @media (any-pointer: fine) {
    html {
      font-size: 18px;
    }
  }

  body {
    /* Prevent pull-to-refresh on mobile */
    overscroll-behavior: none;
    /* Prevent text selection for game elements */
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    /* Optimize for mobile */
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }

  /* Allow text selection for specific elements */
  .select-text {
    -webkit-user-select: text;
    -moz-user-select: text;
    -ms-user-select: text;
    user-select: text;
  }
}

/* Toast animations */
@keyframes enter {
  0% {
    transform: translate3d(0, -200%, 0) scale(0.6);
    opacity: 0.5;
  }
  100% {
    transform: translate3d(0, 0, 0) scale(1);
    opacity: 1;
  }
}

@keyframes leave {
  0% {
    transform: translate3d(0, 0, -1px) scale(1);
    opacity: 1;
  }
  100% {
    transform: translate3d(0, -150%, -1px) scale(0.6);
    opacity: 0;
  }
}

.animate-enter {
  animation: enter 0.35s ease-out;
}

.animate-leave {
  animation: leave 0.35s ease-in forwards;
}

/* Custom utilities */
@layer utilities {
  .h-18 {
    height: 4.5rem; /* 72px */
  }

  /* Mobile viewport utilities */
  .h-screen-dynamic {
    height: 100vh;
    height: 100dvh;
  }

  .min-h-screen-dynamic {
    min-height: 100vh;
    min-height: 100dvh;
  }

  /* Safe area support */
  .pb-safe {
    padding-bottom: env(safe-area-inset-bottom);
  }

  .pt-safe {
    padding-top: env(safe-area-inset-top);
  }

  .pl-safe {
    padding-left: env(safe-area-inset-left);
  }

  .pr-safe {
    padding-right: env(safe-area-inset-right);
  }
}

/* Custom scrollbar for WebKit browsers (Chrome, Safari) */
::-webkit-scrollbar {
  width: 6px;
}

::-webkit-scrollbar-track {
  background: transparent;
}

::-webkit-scrollbar-thumb {
  background: rgba(var(--color-scrollbar-thumb), 0.2);
  border-radius: 3px;
  transition: background 0.2s ease;
}

::-webkit-scrollbar-thumb:hover {
  background: rgba(var(--color-scrollbar-thumb), 0.4);
}

/* Smooth focus styles */
*:focus {
  outline: none;
}

/* Custom button hover effects */
.btn-hover-lift {
  transition: transform 0.2s ease, box-shadow 0.2s ease;
}

.btn-hover-lift:hover {
  transform: translateY(-2px);
  box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.1);
}

.btn-hover-lift:active {
  transform: translateY(0);
}

/* Card hover effects */
.card-hover {
  transition: all 0.2s ease;
}

.card-hover:hover {
  transform: scale(1.05) rotate(1deg);
  box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.2);
  z-index: 10;
}

/* Gradient backgrounds */
.gradient-emerald {
  background: linear-gradient(135deg, #059669 0%, #047857 100%);
}

.gradient-blue {
  background: linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%);
}

/* Game table felt texture */
.felt-texture {
  background-image: radial-gradient(
    circle at 1px 1px,
    rgba(255, 255, 255, 0.1) 1px,
    transparent 0
  );
  background-size: 20px 20px;
}

/* Pulsing animation for current player */
@keyframes gentle-pulse {
  0%,
  100% {
    box-shadow: 0 0 0 0 rgba(59, 130, 246, 0.7);
  }
  50% {
    box-shadow: 0 0 0 10px rgba(59, 130, 246, 0);
  }
}

.gentle-pulse {
  animation: gentle-pulse 2s infinite;
}

/* Border flash animation for active player's name */
@keyframes border-flash {
  0%,
  100% {
    border-color: rgb(146, 64, 14); /* orange-900 - dark wood */
    box-shadow: 0 0 12px 4px rgba(180, 83, 9, 0.8);
  }
  50% {
    border-color: rgb(234, 179, 8); /* yellow-600 - golden wood */
    box-shadow: 0 0 20px 6px rgba(234, 179, 8, 0.9);
  }
}

/* Card flip animation */
@keyframes flip-card {
  0% {
    transform: rotateY(0deg);
  }
  50% {
    transform: rotateY(90deg);
  }
  100% {
    transform: rotateY(0deg);
  }
}

.flip-card {
  animation: flip-card 0.6s ease-in-out;
}

/* Floating animation for game elements */
@keyframes float {
  0%,
  100% {
    transform: translateY(0px);
  }
  50% {
    transform: translateY(-5px);
  }
}

.float {
  animation: float 3s ease-in-out infinite;
}

/* Glow effect for important buttons */
.glow {
  box-shadow: 0 0 20px rgba(59, 130, 246, 0.3);
  transition: box-shadow 0.3s ease;
}

.glow:hover {
  box-shadow: 0 0 30px rgba(59, 130, 246, 0.5);
}

/* Smooth transitions for layout changes */
@layer components {
  .smooth-layout {
    transition: height 0.2s ease-out, max-height 0.2s ease-out;
  }
}

/* Responsive text scaling */
@media (max-width: 640px) {
  .text-responsive {
    font-size: 0.875rem;
  }
}

/* Card Selection Visual States */
.card-selectable {
  cursor: pointer;
  transition: all 0.2s ease-in-out;
}

.card-selectable:hover {
  transform: scale(1.05);
  z-index: 20;
  filter: brightness(1.1);
}

.card-selectable:active {
  transform: scale(0.98);
}

/* Rotated cards (left/right positions) */
.card-rotated {
  transform: rotate(90deg);
}

.card-rotated.card-selectable:hover {
  transform: rotate(90deg) scale(1.05);
}

.card-rotated.card-selectable:active {
  transform: rotate(90deg) scale(0.98);
}

.card-not-selectable {
  opacity: 0.5;
  pointer-events: none;
}

.area-dimmed {
  opacity: 0.5;
  pointer-events: none;
}

/* Action target selected cards (for Q, K, and other card actions) */
@keyframes action-target-glow {
  0%,
  100% {
    box-shadow: 0 0 0 rgba(251, 146, 60, 0);
  }
  50% {
    box-shadow: 0 0 20px rgba(251, 146, 60, 0.9),
      0 0 40px rgba(251, 146, 60, 0.6);
  }
}

.action-target-selected {
  animation: action-target-glow 1.5s ease-in-out infinite;
  border-color: rgb(251, 146, 60) !important;
  z-index: 15;
}

/* Dark mode support */
@media (prefers-color-scheme: dark) {
  :root {
    --toast-bg: #1f2937;
    --toast-text: #f9fafb;
  }
}

/* Declaration Feedback Animations */
@keyframes declaration-glow-correct {
  0%,
  100% {
    box-shadow: 0 0 0 rgba(34, 197, 94, 0);
  }
  50% {
    box-shadow: 0 0 20px rgba(34, 197, 94, 0.8), 0 0 40px rgba(34, 197, 94, 0.4);
  }
}

@keyframes declaration-glow-incorrect {
  0%,
  100% {
    box-shadow: 0 0 0 rgba(239, 68, 68, 0);
  }
  50% {
    box-shadow: 0 0 20px rgba(239, 68, 68, 0.8), 0 0 40px rgba(239, 68, 68, 0.4);
  }
}

.declaration-correct {
  animation: declaration-glow-correct 1s ease-in-out 2;
  animation-delay: 1.5s; /* Wait for card to reach destination */
  border-color: rgb(34, 197, 94) !important;
}

.declaration-correct > div {
  color: rgb(34, 197, 94);
  text-shadow: 0 0 10px rgba(34, 197, 94, 0.8);
  animation: fade-in 0.3s ease-in forwards;
  animation-delay: 1.5s; /* Wait for card to reach destination */
  opacity: 0;
}

.declaration-incorrect {
  animation: declaration-glow-incorrect 0.5s ease-in-out 4;
  animation-delay: 1.5s; /* Wait for card to reach destination */
  border-color: rgb(239, 68, 68) !important;
}

.declaration-incorrect > div {
  color: rgb(239, 68, 68);
  text-shadow: 0 0 10px rgba(239, 68, 68, 0.8);
  animation: fade-in 0.3s ease-in forwards;
  animation-delay: 1.5s; /* Wait for card to reach destination */
  opacity: 0;
}

@keyframes fade-in {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

/* Dialog Component Styles */
/* Based on web.dev best practices: https://web.dev/articles/building/a-dialog-component */

/* Base dialog styles */
dialog {
  background: rgb(var(--color-surface-elevated));
  color: rgb(var(--color-text-primary));
  max-inline-size: min(90vw, 60ch);
  max-block-size: min(80vh, 100%);
  max-block-size: min(80dvb, 100%);
  margin: auto;
  padding: 0;
  position: fixed;
  inset: 0;
  border-radius: 0.75rem;
  box-shadow: 0 25px 50px -12px rgba(var(--color-shadow-heavy), 0.25);
  z-index: 100;
  overflow: hidden;
  border: 1px solid rgb(var(--color-border-primary));
}

dialog[open] {
  display: grid;
}

/* Backdrop */
dialog::backdrop {
  backdrop-filter: blur(25px);
  transition: backdrop-filter 0.5s ease;
}

/* Prevent body scroll when mega dialog is open */
html:has(dialog[open][modal-mode='mega']) {
  overflow: hidden;
}

/* Mega dialog specific styles */
dialog[modal-mode='mega'] {
  /* Use more viewport space */
  max-inline-size: min(90vw, 60ch);
}

/* Mobile mega dialog (action sheet style) */
@media (max-width: 768px) {
  dialog[modal-mode='mega'] {
    margin-block-end: 0;
    border-end-end-radius: 0;
    border-end-start-radius: 0;
  }
}

/* Form layout */
dialog > form {
  display: grid;
  grid-template-rows: auto 1fr auto;
  align-items: start;
  max-block-size: 80vh;
  max-block-size: 80dvb;
  height: 100%;
}

/* Header */
dialog > form > header {
  display: flex;
  gap: 1rem;
  justify-content: space-between;
  align-items: flex-start;
  background: rgb(var(--color-surface-secondary));
  padding-block: 1rem;
  padding-inline: 1.5rem;
  border-bottom: 1px solid rgb(var(--color-border-primary));
}

dialog > form > header > h3 {
  margin: 0;
  font-size: 1.25rem;
  font-weight: 700;
  color: rgb(var(--color-text-primary));
}

/* Close button */
dialog > form > header > button.dialog-close-btn {
  border-radius: 9999px;
  padding: 0.5rem;
  aspect-ratio: 1;
  flex-shrink: 0;
  display: grid;
  place-items: center;
  border: 1px solid rgb(var(--color-border-primary));
  background: transparent;
  color: rgb(var(--color-text-secondary));
  cursor: pointer;
  font-size: 1.25rem;
  line-height: 1;
  transition: all 0.2s ease;
}

dialog > form > header > button.dialog-close-btn:hover {
  background: rgb(var(--color-surface-tertiary));
  color: rgb(var(--color-text-primary));
}

/* Article (scrollable content area) */
dialog > form > article {
  overflow-y: auto;
  max-block-size: 100%;
  overscroll-behavior-y: contain;
  display: grid;
  justify-items: flex-start;
  gap: 1.5rem;
  padding-inline: 1.5rem;
  padding-block: 1.5rem;
  background: rgb(var(--color-surface-primary));
}

/* Form fields */
dialog .form-field {
  width: 100%;
  display: grid;
  gap: 0.5rem;
}

dialog .form-field label {
  font-size: 0.875rem;
  font-weight: 500;
  color: rgb(var(--color-text-primary));
}

dialog .form-field .required {
  color: rgb(var(--color-error));
}

dialog .form-field input,
dialog .form-field textarea {
  width: 100%;
  padding: 0.5rem 0.75rem;
  font-size: 1rem;
  border: 1px solid rgb(var(--color-border-primary));
  border-radius: 0.5rem;
  background: rgb(var(--color-surface-secondary));
  color: rgb(var(--color-text-primary));
  font-family: inherit;
  transition: all 0.2s ease;
}

dialog .form-field input:focus,
dialog .form-field textarea:focus {
  outline: none;
  border-color: rgb(var(--color-border-focus));
  box-shadow: 0 0 0 3px rgba(var(--color-border-focus), 0.1);
}

dialog .form-field input:disabled,
dialog .form-field textarea:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

dialog .form-field textarea {
  resize: vertical;
  min-height: 100px;
}

/* Dialog info box */
dialog .dialog-info {
  width: 100%;
  padding: 0.75rem;
  background: rgba(var(--color-info), 0.05);
  border: 1px solid rgba(var(--color-info), 0.2);
  border-radius: 0.5rem;
  font-size: 0.75rem;
}

dialog .dialog-info .info-title {
  font-weight: 600;
  margin: 0 0 0.25rem 0;
  color: rgb(var(--color-text-primary));
}

dialog .dialog-info .info-description {
  margin: 0;
  color: rgb(var(--color-text-secondary));
}

/* Dialog messages */
dialog .dialog-message {
  width: 100%;
  padding: 0.75rem;
  border-radius: 0.5rem;
  font-size: 0.875rem;
  display: flex;
  align-items: center;
  gap: 0.5rem;
  animation: gentle-pulse 2s ease-in-out;
}

dialog .dialog-message.success {
  background: rgb(var(--color-success-light));
  border: 1px solid rgb(var(--color-success));
  color: rgb(var(--color-success));
}

dialog .dialog-message.error {
  background: rgb(var(--color-error-light));
  border: 1px solid rgb(var(--color-error));
  color: rgb(var(--color-error));
}

/* Footer */
dialog > form > footer {
  background: rgb(var(--color-surface-secondary));
  display: flex;
  flex-wrap: wrap;
  gap: 1rem;
  justify-content: space-between;
  align-items: flex-start;
  padding-inline: 1.5rem;
  padding-block: 1rem;
  border-top: 1px solid rgb(var(--color-border-primary));
}

/* Menu */
dialog > form > footer > menu {
  display: flex;
  flex-wrap: wrap;
  gap: 0.75rem;
  padding: 0;
  margin: 0;
  list-style: none;
}

dialog > form > footer > menu:only-child {
  margin-inline-start: auto;
}

/* Buttons */
dialog > form > footer button {
  padding: 0.5rem 1.5rem;
  font-size: 1rem;
  font-weight: 600;
  border-radius: 0.5rem;
  border: 1px solid transparent;
  cursor: pointer;
  transition: all 0.2s ease;
  font-family: inherit;
}

dialog > form > footer button[type='reset'] {
  background: transparent;
  border-color: rgb(var(--color-border-primary));
  color: rgb(var(--color-text-primary));
}

dialog > form > footer button[type='reset']:hover {
  background: rgb(var(--color-surface-tertiary));
}

dialog > form > footer button[type='submit'] {
  background: rgb(var(--color-info));
  color: white;
}

dialog > form > footer button[type='submit']:hover {
  background: rgb(var(--color-info-dark));
}

dialog > form > footer button:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

/* Animations */
@media (prefers-reduced-motion: no-preference) {
  @keyframes dialog-show {
    from {
      opacity: 0;
      transform: translateY(100px) scale(0.9);
    }
    to {
      opacity: 1;
      transform: translateY(0) scale(1);
    }
  }

  @keyframes dialog-hide {
    from {
      opacity: 1;
      transform: translateY(0) scale(1);
    }
    to {
      opacity: 0;
      transform: translateY(100px) scale(0.9);
    }
  }

  @starting-style {
    dialog[open] {
      opacity: 0;
      transform: translateY(100px) scale(0.9);
    }
  }

  dialog[open] {
    animation: dialog-show 0.3s ease-out;
  }

  dialog:not([open]) {
    animation: dialog-hide 0.3s ease-in;
  }

  /* Mobile specific animations */
  @media (max-width: 768px) {
    @keyframes dialog-show-mobile {
      from {
        opacity: 0;
        transform: translateY(100%);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    @keyframes dialog-hide-mobile {
      from {
        opacity: 1;
        transform: translateY(0);
      }
      to {
        opacity: 0;
        transform: translateY(100%);
      }
    }

    @starting-style {
      dialog[modal-mode='mega'][open] {
        opacity: 0;
        transform: translateY(100%);
      }
    }

    dialog[modal-mode='mega'][open] {
      animation: dialog-show-mobile 0.3s ease-out;
    }

    dialog[modal-mode='mega']:not([open]) {
      animation: dialog-hide-mobile 0.3s ease-in;
    }
  }
}


/* Mini dialog specific styles */
dialog[modal-mode='mini'] {
  max-inline-size: min(90vw, 28rem);
}

/* Coalition Leader Dialog specific styles */
.coalition-leader-dialog {
  max-inline-size: min(90vw, 48rem);
}

.coalition-leader-dialog .dialog-header-content {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  margin-bottom: 0.5rem;
}

.coalition-leader-dialog .dialog-icon {
  color: #f59e0b;
  flex-shrink: 0;
}

.coalition-leader-dialog .dialog-subtitle {
  margin: 0.5rem 0 0 0;
  font-size: 1rem;
  text-align: center;
  color: rgb(var(--color-text-secondary));
}

.coalition-leader-dialog .dialog-description {
  margin: 0.5rem 0 0 0;
  font-size: 0.875rem;
  text-align: center;
  color: rgb(var(--color-text-secondary));
}

.coalition-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: 1rem;
  width: 100%;
}

.coalition-player-card {
  position: relative;
  padding: 0.5rem;
  border-radius: 0.75rem;
  border: 2px solid rgb(var(--color-border-primary));
  background: rgb(var(--color-surface-secondary));
  transition: all 0.2s ease;
}

.coalition-player-card.is-leader {
  border-color: rgb(var(--color-warning));
  background: rgba(var(--color-warning), 0.1);
}

.leader-badge {
  position: absolute;
  top: 0;
  right: 0;
  display: flex;
  align-items: center;
  gap: 0.25rem;
  background: rgb(var(--color-warning));
  color: white;
  font-size: 0.75rem;
  font-weight: 600;
  padding: 0.25rem 0.5rem;
  border-radius: 0 0.5rem 0 0.5rem;
}

/* Vinto Confirmation Dialog specific styles */
.vinto-confirmation-dialog {
  border-color: rgb(var(--color-warning));
  border-width: 2px;
}

.dialog-warning-header {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  margin-bottom: 1rem;
}

.dialog-warning-icon {
  font-size: 2rem;
}

.dialog-text-center {
  text-align: center;
  font-size: 1rem;
  line-height: 1.6;
  color: rgb(var(--color-text-secondary));
  margin: 0;
}

@media (min-width: 768px) {
  .dialog-text-center {
    font-size: 1.125rem;
  }
}

.vinto-confirmation-dialog footer menu {
  flex-direction: column;
  width: 100%;
}
